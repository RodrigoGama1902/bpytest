from .entity import BpyTestConfig as BpyTestConfig, SessionInfo as SessionInfo, TestUnit as TestUnit
from .exception import InvalidFixtureName as InvalidFixtureName
from .fixtures import execute_finalize_request as execute_finalize_request, inspect_func_for_fixtures as inspect_func_for_fixtures
from dataclasses import dataclass
from pathlib import Path
from typing import Any

class BlockStandardOutput:
    def __enter__(self): ...
    def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any) -> Any: ...

@dataclass
class ExecutionResult:
    success: bool = ...
    result_lines: list[str] = ...
    def __init__(self, success, result_lines) -> None: ...

def execute(pythonpath: Path, module_filepath: Path, function_name: str, session_info: SessionInfo, config: BpyTestConfig) -> ExecutionResult: ...

class TestRunner:
    def __init__(self, test_unit: TestUnit, bpytest_config: BpyTestConfig, session_info: SessionInfo) -> None: ...
    def execute(self) -> bool: ...
